"""
Anagram

2개의 단어는 각각 어떤 하나의 단어에 대해 애너그램 관계를 갖는다.
따라서 재정렬함에 따라 주어진 다른 단어를 만들 수 있다.

어떤 문자열 1개를 동일한 길이를 갖는 연속된 문자열로 자른다.
애너그램 관계를 갖게 하기 위해 바꿔야 하는 문자의 최소 개수를 구한다.
"""
"""
1. 만약 두 문자열을 동등하게 나눌 수 없다면(홀수라면) -1을 반환한다.
2. 문자열의 개수를 저장하는 배열을 만든다. ord number를 이용하여 저장한다.
2-1. 만약 문자열의 개수가 s1: b가 2개고 s2: b가 3개라면 1개가 더 필요하다.
3. 차이를 모두 더하고 나누기 2를 하면된다.
"""

def anagram(s):
    if len(s) % 2 != 0:
        return -1
    
    s1 = [0] * 26
    s2 = [0] * 26
    count = 0

    mid = len(s) // 2

    for i in range(mid):
        s1[ord(s[i]) - ord('a')] += 1
        s2[ord(s[i + mid]) - ord('a')] += 1
    
    for i in range(26):
        count += abs(s1[i] - s2[i])
    
    return count // 2